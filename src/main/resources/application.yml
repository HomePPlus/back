# 애플리케이션 기본 설정
spring:
  application:
    name: safehouse # 애플리케이션 이름 설정

  config:
    import: optional:file:.env[.properties]

  # 데이터베이스 연결 설정
  datasource:
    url: jdbc:mysql://${DB_URL}:${DB_PORT}/${DB}?serverTimezone=Asia/Seoul&characterEncoding=utf8&useUnicode=true
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update # 데이터베이스 스키마 자동 업데이트
    show-sql: true # SQL 쿼리 로그 출력
    properties:
      hibernate:
        format_sql: true # SQL 쿼리 포맷팅
        dialect: org.hibernate.dialect.MySQLDialect # 데이터베이스 방언 설정

  # SQL 초기화 설정
  sql:
    init:
      mode: always # SQL 스크립트 항상 실행
      encoding: UTF-8 # SQL 스크립트 인코딩

  mvc:
    charset: UTF-8

  # 이메일 인증 코드
  mail:
    host: smtp.gmail.com
    port: 587
    username: dbsn0717@gmail.com
    password: rxwu ucrl wbww qnmd
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # 멀티 파트 요청(모델)
  servlet:
    multipart:
      enabled: true
      max-file-size: 500MB
      max-request-size: 500MB
      resolve-lazily: true # 멀티파트 요청을 필요할 때만 파싱
      location: ${java.io.tmpdir} # 임시 파일 저장 위치

# 서버 인코딩 설정
server:
  servlet:
    encoding:
      charset: UTF-8 # 문자 인코딩 설정
      force: true # 인코딩 강제 적용
      force-response: true
      enabled: true # 인코딩 설정 활성화

# 로깅 설정
logging:
  level:
    org.springframework.security: DEBUG # 스프링 시큐리티 로그 레벨 설정

# 스프링 시큐리티 설정
spring.security:
  user:
    name: root # 기본 사용자 이름
    password: aivle # 기본 사용자 비밀번호

# JWT 설정
jwt:
  secret: yourSecretKeyHereMustBeLongEnoughForSecurity # JWT 토큰 암호화 키
  token-validity-in-seconds: 1800 # 30분

# 파일 업로드 경로
file:
  upload:
    path: "C:/Users/User/safehouse_upload_images/"

# FastAPI 서버 URL
fastapi:
  server:
    url: ${FASTAPI_SERVER_URL:http://localhost:8000} # 환경 변수가 없을 경우 http://localhost:8000을 기본값으로 사용
